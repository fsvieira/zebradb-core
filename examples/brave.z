/*
    http://www.mathsisfun.com/puzzles/a-brave-puzzle.html

Rules: 
    * can't repeat brave letters on lines, columns and two main diagonals.
    * the goal is to find the missing letters.    

    B R A V E
    _ E B R _
    _ _ V _ B
    _ B R _ _
    _ _ E B _

-- Solution:
    
    B R A V E
    V E B R A
    R A V E B
    E B R A V
    A V E B R

*/

(letter B)
(letter R)
(letter A)
(letter V)
(letter E)

(equal 'x 'x)

(distinct 
    (letter 'b) (letter 'r) (letter 'a) (letter 'v) (letter 'e)
    ^(equal 'b 'r) ^(equal 'b 'a) ^(equal 'b 'v) ^(equal 'b 'v) ^(equal 'b 'e)
    ^(equal 'r 'a) ^(equal 'r 'v) ^(equal 'r 'v) ^(equal 'r 'e)
    ^(equal 'a 'v) ^(equal 'a 'e)
)

(conditions '1 '2 '3 '4 '5 '6 '7 '8 '9 '10 '11 '12)

(brave
    'x1y1 'x2y1 'x3y1 'x4y1 'x5y1
    'x1y2 'x2y2 'x3y2 'x4y2 'x5y2
    'x1y3 'x2y3 'x3y3 'x4y3 'x5y3
    'x1y4 'x2y4 'x3y4 'x4y4 'x5y4
    'x1y5 'x2y5 'x3y5 'x4y5 'x5y5
    (
        conditions
        (distinct 'x1y1 'x2y1 'x3y1 'x4y1 'x5y1)
        (distinct 'x1y2 'x2y2 'x3y2 'x4y2 'x5y2)
        (distinct 'x1y3 'x2y3 'x3y3 'x4y3 'x5y3)
        (distinct 'x1y4 'x2y4 'x3y4 'x4y4 'x5y4)
        (distinct 'x1y5 'x2y5 'x3y5 'x4y5 'x5y5)
        
        (distinct 'x1y1 'x1y2 'x1y3 'x1y4 'x1y5)
        (distinct 'x2y1 'x2y2 'x2y3 'x2y4 'x2y5)
        (distinct 'x3y1 'x3y2 'x3y3 'x3y4 'x3y5)
        (distinct 'x4y1 'x4y2 'x4y3 'x4y4 'x4y5)
        (distinct 'x5y1 'x5y2 'x5y3 'x5y4 'x5y5)

        (distinct 'x1y1 'x2y2 'x3y3 'x4y4 'x5y5)
        (distinct 'x1y5 'x2y4 'x3y3 'x4y2 'x5y1)
    )
)


?(brave
    (letter B) (letter R) (letter A) (letter V) (letter E)
    '          (letter E) (letter B) (letter R) 'v2
    '          '          (letter V) '          (letter B)
    '          (letter B) (letter R) '          '
    '          '          (letter E) (letter B) '
    '
) {%
    function toString (r) {
        var str = "";
        for (var i=1; i<r.data.length-1; i++) {
            const v = r.data[i];
            if (v.type === 'variable' || v.data[1].type === 'variable') {
                str += "_";
            }
            else {
                str += v.data[1].data;
            }

            if (i%5 === 0) {
                str += "\n";
            }
            else {
                str += " ";
            }
        }
        
        return str;
    }
    
    return {
        query: toString(query),
        result: toString(result)
    };
%}

